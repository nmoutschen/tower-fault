(function() {var implementors = {};
implementors["tower_fault_injector"] = [{"text":"impl&lt;'a, D, G&gt; Freeze for <a class=\"struct\" href=\"tower_fault_injector/error/struct.ErrorLayer.html\" title=\"struct tower_fault_injector::error::ErrorLayer\">ErrorLayer</a>&lt;'a, D, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["tower_fault_injector::error::ErrorLayer"]},{"text":"impl&lt;'a, D, G, S&gt; Freeze for <a class=\"struct\" href=\"tower_fault_injector/error/struct.ErrorService.html\" title=\"struct tower_fault_injector::error::ErrorService\">ErrorService</a>&lt;'a, D, G, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;D: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["tower_fault_injector::error::ErrorService"]},{"text":"impl&lt;'a, De, Di&gt; Freeze for <a class=\"struct\" href=\"tower_fault_injector/latency/struct.LatencyLayer.html\" title=\"struct tower_fault_injector::latency::LatencyLayer\">LatencyLayer</a>&lt;'a, De, Di&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;De: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Di: Freeze,&nbsp;</span>","synthetic":true,"types":["tower_fault_injector::latency::LatencyLayer"]},{"text":"impl&lt;'a, De, Di, S&gt; Freeze for <a class=\"struct\" href=\"tower_fault_injector/latency/struct.LatencyService.html\" title=\"struct tower_fault_injector::latency::LatencyService\">LatencyService</a>&lt;'a, De, Di, S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;De: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;Di: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Freeze,&nbsp;</span>","synthetic":true,"types":["tower_fault_injector::latency::LatencyService"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()