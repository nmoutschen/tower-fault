var searchIndex = JSON.parse('{\
"tower_fault":{"doc":"Fault injection utilities for <code>tower</code>","t":[0,0,0,8,10,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11],"n":["decider","error","latency","Decider","decide","ErrorLayer","ErrorService","borrow","borrow","borrow_mut","borrow_mut","builder","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","layer","new","poll_ready","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_decider","with_generator","Distribution","LatencyLayer","LatencyService","borrow","borrow","borrow_mut","borrow_mut","builder","call","clone","clone","clone_into","clone_into","fmt","fmt","from","from","into","into","layer","new","poll_ready","sample","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_decider","with_distribution"],"q":["tower_fault","","","tower_fault::decider","","tower_fault::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","tower_fault::latency","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Decider","Error injection for <code>tower</code>","Latency injection for <code>tower</code>","Trait for deciding if a fault should be injected for a …","Decide if a fault should be injected for a given request …","Layer that randomly trigger errors for the service.","Service that randomly trigger errors instead of calling …","","","","","Create a new <code>ErrorLayer</code> builder.","","","","","","","","","","","","","Create a new <code>ErrorLayer</code> builder with the given probability …","","","","","","","","","","","","Set the given decider to be used to determine if an error …","Set the given error generator to generate errors.","Trait that returns a random latency.","Layer that randomly adds latency to the service.","Service that randomly injects latency into a service.","","","","","Create a new <code>LatencyLayer</code> builder.","","","","","","","","","","","","","Create a new <code>LatencyLayer</code> builder with the given …","","Returns a random latency.","","","","","","","","","","","Set the given decider to be used to determine if a latency …","Set the given latency distribution to set the latency."],"i":[0,0,0,0,1,0,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,2,3,2,3,2,3,2,3,2,3,2,3,2,2,0,0,0,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,5,4,4,5,6,4,5,4,5,4,5,4,5,4,5,4,4],"f":[null,null,null,null,[[],["bool",15]],null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["errorlayer",3]],[[],["errorservice",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3]],["poll",4,[["result",4]]]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],["errorlayer",3]],[[],["errorlayer",3]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["latencylayer",3]],[[],["latencyservice",3]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["context",3]],["poll",4,[["result",4]]]],[[],["duration",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[],["latencylayer",3]],[[],["latencylayer",3]]],"p":[[8,"Decider"],[3,"ErrorLayer"],[3,"ErrorService"],[3,"LatencyLayer"],[3,"LatencyService"],[8,"Distribution"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};